{"version":3,"sources":["components/Layout.js","components/NoteCard.js","pages/Notes.js","pages/Create.js","pages/TicTac.js","App.js","index.js"],"names":["Layout","children","history","useHistory","location","useLocation","menuItems","text","icon","color","path","Box","sx","display","AppBar","elevation","paddingLeft","Toolbar","Typography","flexGrow","marginRight","Avatar","Drawer","className","variant","anchor","width","padding","List","map","item","linkColor","pathname","ListItem","button","onClick","push","backgroundColor","ListItemIcon","ListItemText","primary","Container","drawerWidth","paddingTop","NoteCard","note","handleDelete","Card","CardHeader","avatar","category","toUpperCase","action","IconButton","id","title","subheader","CardContent","details","Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","a","method","newNotes","filter","Grid","container","spacing","paddingBottom","xs","sm","md","Create","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","marginTop","marginBottom","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","flexDirection","FormControlLabel","control","Radio","Button","type","endIcon","TicTac","calculateWinner","squares","lines","i","length","b","c","Square","props","size","height","fontSize","borderRadius","Board","this","row","j","renderSquare","field","ButtonGroup","React","Component","Game","state","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","move","desc","jumpTo","handleClick","dense","theme","createTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d7745e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport Avatar from '@mui/material/Avatar'\r\n\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport SubjectOutlined from '@mui/icons-material/SubjectOutlined'\r\nimport AddCircle from '@mui/icons-material/AddCircle'\r\nimport BugReportIcon from '@mui/icons-material/BugReport';\r\nimport VideogameAssetIcon from '@mui/icons-material/VideogameAsset';\r\n\r\nconst drawerWidth = 182\r\n// const appbarWidth = `calc(100% - ${drawerWidth})px`\r\n\r\nexport default function Layout({children}) {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const menuItems = [\r\n        {\r\n            text: 'My Notes',\r\n            icon: <SubjectOutlined color=\"secondary\" />,\r\n            path: '/'\r\n        },\r\n        {\r\n            text: 'Create Notes',\r\n            icon: <AddCircle color=\"secondary\" />,\r\n            path: '/create'\r\n        },\r\n        // {\r\n        //     text: 'Test Page',\r\n        //     icon: <BugReportIcon color=\"secondary\" />,\r\n        //     path: '/test'\r\n        // },\r\n        {\r\n            text: 'Tic Tac Toe',\r\n            icon: <VideogameAssetIcon color=\"secondary\" />,\r\n            path: '/tictac'\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: \"flex\"\r\n        }}>\r\n            {/* app bar */}\r\n            <AppBar\r\n                elevation={0}\r\n                sx={{\r\n                    paddingLeft: `${drawerWidth}px`\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <Typography sx={{flexGrow: 1}}>\r\n                        TODO List\r\n                    </Typography>\r\n                    <Typography sx={{marginRight: 1}}>\r\n                        Antreesy\r\n                    </Typography>\r\n                    <Avatar\r\n                        children={<PersonIcon/>}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/* side drawer */}\r\n            <Drawer\r\n                className={\"drawer\"}\r\n                variant=\"permanent\"\r\n                anchor=\"left\"\r\n                sx={{\r\n                    width: drawerWidth\r\n                }}    \r\n            >\r\n                <Typography variant=\"h5\" sx={{padding: 2}}>\r\n                Some notes\r\n                </Typography>\r\n\r\n                <List>\r\n                    {menuItems.map(item => {\r\n                        const linkColor = (location.pathname === item.path) ? '#ce93d8' : \"transparent\"\r\n                        \r\n                        return (\r\n\r\n                        <ListItem\r\n                            button\r\n                            onClick={() => history.push(item.path)}\r\n                            key={item.text}\r\n                            sx={{\r\n                                backgroundColor: linkColor\r\n                            }}\r\n                        >\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <ListItemText primary={item.text} />\r\n                        </ListItem>\r\n                    )})}\r\n                </List>\r\n            </Drawer>\r\n\r\n            {/* main content */}\r\n            <Container className={\"page\"} sx={{\r\n                paddingLeft: {drawerWidth}+\"px\",\r\n                paddingTop: \"64px\",\r\n                width: \"100%\",\r\n                }}>\r\n            {children}\r\n            </Container>\r\n        </Box>   \r\n    )\r\n}","import React from \"react\";\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Delete from \"@mui/icons-material/Delete\";\r\nimport { Avatar, IconButton, Typography } from \"@mui/material\";\r\n\r\nexport default function NoteCard({note, handleDelete}) {\r\n    return (\r\n        <Card elevation={5}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar\r\n                        sx={{\r\n                            backgroundColor: () => {\r\n                                switch (note.category[0]) {\r\n                                    case ('w'): {return \"blue\";}\r\n                                    case ('m'): {return \"yellow\";}\r\n                                    case ('t'): {return \"green\";}\r\n                                    case ('r'): {return \"red\";}\r\n                                    default: {return \"#666\";}\r\n                                }\r\n                            }\r\n                        }}\r\n                    >{note.category[0].toUpperCase()}</Avatar>\r\n                }\r\n                action={\r\n                    <IconButton onClick={() => handleDelete(note.id)} color=\"secondary\">\r\n                        <Delete />\r\n                    </IconButton>\r\n                }\r\n                title={note.title}\r\n                subheader={note.category}\r\n            />\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                >\r\n                   {note.details} \r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n            // \r\n        \r\n    )\r\n}","import React, { useState, useEffect } from 'react'\nimport Container from '@mui/material/Container'\nimport Grid from '@mui/material/Grid'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport NoteCard from '../components/NoteCard'\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch('https://my-json-server.typicode.com/antreesy/db/notes')\n      .then(res => res.json())\n      .then(data => setNotes(data))\n  }, [])\n\n  const handleDelete = async (id) => {\n    await fetch('https://my-json-server.typicode.com/antreesy/db/notes/'+id, {\n      method: 'DELETE'\n    })\n\n    const newNotes = notes.filter(note => note.id !== id)\n    setNotes(newNotes)\n  }\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      sx={{\n        paddingTop: 3,\n        paddingBottom: 3,\n      }}\n    >\n      {notes.map(note => (\n        <Grid item xs={12} sm={6} md={3} key={note.id}>\n          <NoteCard note={note} handleDelete={handleDelete} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n","import React, { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormLabel from '@mui/material/FormLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\n\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function Create() {\n  const history = useHistory();\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    // eslint-disable-next-line eqeqeq\n    if (title == '') {\n      setTitleError(true)\n    }\n    // eslint-disable-next-line eqeqeq\n    if (details == '') {\n      setDetailsError(true)\n    }\n\n    if (title && details) {\n      fetch('https://my-json-server.typicode.com/antreesy/db/notes', {\n        method: 'POST',\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({title, details, category})\n      }).then(() => history.push('/'))\n    }\n  }\n  const [category, setCategory] = useState('todos')\n\n  return (\n    <Box sx={{\n      marginTop: 3,\n      marginBottom: 3,\n      padding: 3,\n      backgroundColor: \"#fff\",\n    }}>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        gutterBottom\n        color=\"textSecondary\"\n      >\n        Create a New Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e)=> setTitle(e.target.value)}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          color='secondary'\n          fullWidth\n          required\n          error={titleError}\n          sx={{marginBottom: 2}}\n        />\n\n        <TextField\n          onChange={(e)=> setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          color='secondary'\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n          sx={{marginBottom: 2}}\n        />\n\n      <FormControl sx={{display: \"flex\", marginBottom: 2}}>\n        <FormLabel>Note Category</FormLabel>\n        <RadioGroup \n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n          sx={{display: \"flex\", flexDirection: \"row\"}}\n        >\n          <FormControlLabel\n            value=\"money\" \n            label=\"Money\"\n            control={<Radio />}\n          />\n\n          <FormControlLabel\n            value=\"todos\" \n            label=\"Todos\"\n            control={<Radio />}\n          />\n\n          <FormControlLabel\n            value=\"reminders\" \n            label=\"Reminders\"\n            control={<Radio />}\n          />\n\n          <FormControlLabel\n            value=\"work\" \n            label=\"Work\"\n            control={<Radio />}\n          />\n\n        </RadioGroup>\n      </FormControl>\n\n        <Button\n          type='submit'\n          color = \"secondary\"\n          variant = \"contained\"\n          children = \"submit\"\n          endIcon = {<KeyboardArrowRightIcon/>}\n        />\n      </form>\n\n    </Box>\n  )\n}\n","import React from 'react'\r\nimport { Button, ButtonGroup, Box, List, ListItem, Typography } from '@mui/material';\r\n\r\nexport default function TicTac() {\r\n\r\n    function calculateWinner(squares) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function Square(props) {\r\n        return (\r\n            <Button\r\n                children={props.value}\r\n                onClick={props.onClick}\r\n                variant='outlined'\r\n                size='large'\r\n                color='warning'\r\n                sx={{\r\n                    width:'60px',\r\n                    height:'60px',\r\n                    fontSize:'40px',\r\n                    borderRadius:'0'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n  \r\n    class Board extends React.Component {\r\n        renderSquare(i) {\r\n            return (\r\n                <Square\r\n                    value={this.props.squares[i]}\r\n                    onClick={() => this.props.onClick(i)}\r\n                />\r\n            );\r\n        };\r\n\r\n        render() {\r\n            const row = (i) => {\r\n                return [0,1,2].map((j) => this.renderSquare(3*i+j));\r\n            }\r\n\r\n            const field = [0,1,2].map((i) => {\r\n                return (\r\n                    <ButtonGroup sx={{marginTop:'-1px'}}>\r\n                        {row(i)}\r\n                    </ButtonGroup>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <Box sx={{\r\n                        display: \"flex\",\r\n                        flexDirection:\"column\"\r\n                    }}\r\n                    children={field}\r\n                />\r\n            );\r\n        }\r\n    }\r\n  \r\n    class Game extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                history: [{\r\n                    squares: Array(9).fill(null),\r\n                }],\r\n                stepNumber: 0,\r\n                xIsNext: true,\r\n            };\r\n        }\r\n\r\n        handleClick(i) {\r\n            const history = this.state.history.slice(0, this.state.stepNumber +1);\r\n            const current = history[history.length - 1];\r\n            const squares = current.squares.slice();\r\n            if (calculateWinner(squares) || squares[i]) {return;}\r\n            squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n            this.setState({\r\n                history: history.concat([{\r\n                    squares: squares,\r\n                }]),\r\n                stepNumber: history.length,\r\n                xIsNext: !this.state.xIsNext,\r\n            });\r\n        }\r\n\r\n        jumpTo(step) {\r\n            this.setState({\r\n                stepNumber: step,\r\n                xIsNext: (step % 2) === 0,\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const history = this.state.history;\r\n            const current = history[this.state.stepNumber];\r\n            const winner = calculateWinner(current.squares);\r\n\r\n            const moves = history.map((step, move) => {\r\n                const desc = move ?\r\n                  'Go to turn' + move :\r\n                  'Go to start';\r\n                return (\r\n                    <ListItem key={move}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color={(move % 2) ? 'secondary' : 'primary'}\r\n                            size='small'\r\n                            children={desc}\r\n                            onClick={() => this.jumpTo(move)}\r\n                        \r\n                        />\r\n                    </ListItem>\r\n                );\r\n            });\r\n\r\n            let status;\r\n            if (winner) {\r\n                status = 'Winner is ' + winner;\r\n            } else {\r\n                status = 'Next player: ' + (this.state.xIsNext ? \"Х\" : \"O\");\r\n            }\r\n\r\n            return (\r\n            <Box sx={{display:\"flex\", paddingTop:3}}>\r\n                <Box sx={{marginRight:3}}>\r\n                <Board\r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                />\r\n                </Box>\r\n                <Box>\r\n                <Typography variant='h6' children={status} />\r\n                <List dense children={moves} />\r\n                </Box>\r\n            </Box>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n  return <Game />\r\n}","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Layout from './components/Layout'\nimport Test from './pages/Test'\nimport Notes from './pages/Notes'\nimport Create from './pages/Create'\nimport TicTac from './pages/TicTac'\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\"\n// import { deepPurple } from '@mui/material/colors'\n\nconst theme = createTheme({\n  // palette: {\n  //   primary: {\n  //     main: '#cddc39',\n  //   }\n  // },\n})\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            {/* <Route path=\"/test\">\n              <Test />\n            </Route> */}\n            <Route path=\"/tictac\">\n              <TicTac />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n   </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}